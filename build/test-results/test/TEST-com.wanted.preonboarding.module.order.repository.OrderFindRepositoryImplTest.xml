<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" tests="10" skipped="0" failures="0" errors="0" timestamp="2024-05-30T09:18:02" hostname="lyusang-won-ui-MacBookPro.local" time="0.785">
  <properties/>
  <testcase name="재고 카운트 및 제품 구매 확정 단계 조회 - 완료 상태" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.444"/>
  <testcase name="Order Entity 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.043"/>
  <testcase name="DetailedOrderContext snapshot 조회 - 구매자가 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.05"/>
  <testcase name="DetailedOrderContext 조회 - 구매자가 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.036"/>
  <testcase name="DetailedOrderContext 조회 - 판매자가 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.035"/>
  <testcase name="DetailedOrderContext 조회 - 그냥 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.036"/>
  <testcase name="재고 카운트 및 제품 구매 확정 단계 조회 - 판매중 상태" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.04"/>
  <testcase name="재고 카운트 및 제품 구매 확정 단계 조회 - 예약 상태" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.037"/>
  <testcase name="DetailedOrderContext 조회 snapshot - 판매자가 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.031"/>
  <testcase name="구매이력 조회" classname="com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest" time="0.031"/>
  <system-out><![CDATA[2024-05-30T18:18:02.709+09:00  INFO 21571 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest]: OrderFindRepositoryImplTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-30T18:18:02.723+09:00  INFO 21571 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.wanted.preonboarding.PreonboardingApplication for test class com.wanted.preonboarding.module.order.repository.OrderFindRepositoryImplTest
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2024-05-30T18:18:02.734+09:00  INFO 21571 --- [    Test worker] c.w.p.m.o.r.OrderFindRepositoryImplTest  : Starting OrderFindRepositoryImplTest using Java 21.0.3 with PID 21571 (started by sangwon-ryu in /Users/sangwon-ryu/wanted-preonboarding-challenge-backend-20)
2024-05-30T18:18:02.734+09:00 DEBUG 21571 --- [    Test worker] c.w.p.m.o.r.OrderFindRepositoryImplTest  : Running with Spring Boot v3.3.0, Spring v6.1.8
2024-05-30T18:18:02.735+09:00  INFO 21571 --- [    Test worker] c.w.p.m.o.r.OrderFindRepositoryImplTest  : No active profile set, falling back to 1 default profile: "default"
2024-05-30T18:18:02.772+09:00  INFO 21571 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-05-30T18:18:02.772+09:00  INFO 21571 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-05-30T18:18:02.789+09:00  INFO 21571 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 3 JPA repository interfaces.
2024-05-30T18:18:02.794+09:00  INFO 21571 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2024-05-30T18:18:02.810+09:00  INFO 21571 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:725488e5-2187-4e37-80c4-808d35bc5350;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2024-05-30T18:18:02.824+09:00  INFO 21571 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-05-30T18:18:02.825+09:00  INFO 21571 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-05-30T18:18:02.829+09:00  INFO 21571 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-05-30T18:18:02.887+09:00  INFO 21571 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: drop table if exists orders cascade 
Hibernate: drop table if exists orders_history cascade 
Hibernate: drop table if exists orders_product_snapshot cascade 
Hibernate: drop table if exists product cascade 
Hibernate: drop table if exists users cascade 
Hibernate: create table orders (buyer_id bigint not null, insert_date timestamp(6) not null, order_id bigint generated by default as identity, product_id bigint not null, seller_id bigint not null, update_date timestamp(6) not null, insert_operator varchar(255) not null, update_operator varchar(255) not null, delete_yn enum ('N','Y') not null, order_status enum ('COMPLETED','ORDERED','SETTLEMENT') not null, primary key (order_id))
Hibernate: create table orders_history (insert_date timestamp(6) not null, order_history_id bigint generated by default as identity, order_id bigint not null, update_date timestamp(6) not null, insert_operator varchar(255) not null, update_operator varchar(255) not null, delete_yn enum ('N','Y') not null, order_status enum ('COMPLETED','ORDERED','SETTLEMENT') not null, primary key (order_history_id))
Hibernate: create table orders_product_snapshot (order_id bigint generated by default as identity, price bigint not null, product_id bigint not null, product_name varchar(255) not null, primary key (order_id))
Hibernate: create table product (quantity integer not null, insert_date timestamp(6) not null, price bigint not null, product_id bigint generated by default as identity, update_date timestamp(6) not null, user_id bigint not null, insert_operator varchar(255) not null, product_name varchar(255) not null, update_operator varchar(255) not null, delete_yn enum ('N','Y') not null, product_status enum ('BOOKING','ON_STOCK','OUT_OF_STOCK') not null, primary key (product_id))
Hibernate: create table users (insert_date timestamp(6) not null, update_date timestamp(6) not null, user_id bigint generated by default as identity, email varchar(255) not null unique, insert_operator varchar(255) not null, password_hash varchar(255) not null, phone_number varchar(255) not null unique, update_operator varchar(255) not null, delete_yn enum ('N','Y') not null, membership enum ('GUEST','NORMAL') not null, primary key (user_id))
Hibernate: alter table if exists orders add constraint FKhtx3insd5ge6w486omk4fnk54 foreign key (buyer_id) references users
Hibernate: alter table if exists orders add constraint FK787ibr3guwp6xobrpbofnv7le foreign key (product_id) references product
Hibernate: alter table if exists orders add constraint FKsb9w6305d2be0rwbtifi7wymp foreign key (seller_id) references users
Hibernate: alter table if exists orders_history add constraint FK6j8fy7l6bc3bskbgu028ng191 foreign key (order_id) references orders
Hibernate: alter table if exists orders_product_snapshot add constraint FKngqo5alcy00ll06engecg1vnj foreign key (product_id) references product
Hibernate: alter table if exists product add constraint FK47nyv78b35eaufr6aa96vep6n foreign key (user_id) references users
2024-05-30T18:18:02.896+09:00  INFO 21571 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-05-30T18:18:02.926+09:00  INFO 21571 --- [    Test worker] c.w.p.m.o.r.OrderFindRepositoryImplTest  : Started OrderFindRepositoryImplTest in 0.201 seconds (process running for 7.538)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: update product set delete_yn=?,insert_operator=?,price=?,product_name=?,product_status=?,quantity=?,user_id=?,update_date=?,update_operator=? where product_id=?
Hibernate: select o1_0.order_id,o1_0.buyer_id,o1_0.delete_yn,o1_0.insert_date,o1_0.insert_operator,oh1_0.order_id,oh1_0.order_history_id,oh1_0.delete_yn,oh1_0.insert_date,oh1_0.insert_operator,oh1_0.order_status,oh1_0.update_date,oh1_0.update_operator,o1_0.order_status,o1_0.product_id,pss1_0.order_id,pss1_0.price,pss1_0.product_id,pss1_0.product_name,o1_0.seller_id,o1_0.update_date,o1_0.update_operator from orders o1_0 left join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id left join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id where o1_0.order_id=?
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: update orders set buyer_id=?,delete_yn=?,insert_operator=?,order_status=?,product_id=?,seller_id=?,update_date=?,update_operator=? where order_id=?
Hibernate: select p1_0.quantity,count(opss1_0.order_id) from orders_product_snapshot opss1_0 join orders o1_0 on o1_0.order_id=opss1_0.order_id join product p1_0 on p1_0.product_id=opss1_0.product_id where p1_0.product_id=? and (o1_0.order_status=? or o1_0.order_status=?) group by p1_0.product_id,opss1_0.order_id
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,o1_0.buyer_id,b1_0.user_id,b1_0.delete_yn,b1_0.email,b1_0.insert_date,b1_0.insert_operator,b1_0.membership,b1_0.password_hash,b1_0.phone_number,b1_0.update_date,b1_0.update_operator,o1_0.delete_yn,o1_0.insert_date,o1_0.insert_operator,o1_0.order_status,o1_0.product_id,o1_0.seller_id,s1_0.user_id,s1_0.delete_yn,s1_0.email,s1_0.insert_date,s1_0.insert_operator,s1_0.membership,s1_0.password_hash,s1_0.phone_number,s1_0.update_date,s1_0.update_operator,o1_0.update_date,o1_0.update_operator from orders o1_0 join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where o1_0.order_id=?
Hibernate: select opss1_0.order_id,opss1_0.price,opss1_0.product_id,opss1_0.product_name from orders_product_snapshot opss1_0 where opss1_0.order_id=?
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,o1_0.buyer_id,o1_0.delete_yn,o1_0.insert_date,o1_0.insert_operator,oh1_0.order_id,oh1_0.order_history_id,oh1_0.delete_yn,oh1_0.insert_date,oh1_0.insert_operator,oh1_0.order_status,oh1_0.update_date,oh1_0.update_operator,o1_0.order_status,o1_0.product_id,pss1_0.order_id,pss1_0.price,pss1_0.product_id,pss1_0.product_name,o1_0.seller_id,o1_0.update_date,o1_0.update_operator from orders o1_0 left join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id left join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id where o1_0.order_id=?
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: update orders set buyer_id=?,delete_yn=?,insert_operator=?,order_status=?,product_id=?,seller_id=?,update_date=?,update_operator=? where order_id=?
Hibernate: select o1_0.order_id,pss1_0.product_id,b1_0.email,s1_0.email,oh1_0.order_status,pss1_0.price,pss1_0.product_name,oh1_0.insert_date from orders o1_0 join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where o1_0.order_id=? and (s1_0.email=? or b1_0.email=?) order by oh1_0.order_history_id
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,pss1_0.product_id,b1_0.email,s1_0.email,o1_0.order_status,pss1_0.price,pss1_0.product_name,o1_0.insert_date from orders o1_0 join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where s1_0.email=? or b1_0.email=? order by o1_0.order_id desc,o1_0.order_id desc fetch first ? rows only
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,pss1_0.product_id,b1_0.email,s1_0.email,o1_0.order_status,pss1_0.price,pss1_0.product_name,o1_0.insert_date from orders o1_0 join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where s1_0.email=? or b1_0.email=? order by o1_0.order_id desc,o1_0.order_id desc fetch first ? rows only
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,pss1_0.product_id,b1_0.email,s1_0.email,o1_0.order_status,pss1_0.price,pss1_0.product_name,o1_0.insert_date from orders o1_0 join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where s1_0.email=? or b1_0.email=? order by o1_0.order_id desc,o1_0.order_id desc fetch first ? rows only
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: update product set delete_yn=?,insert_operator=?,price=?,product_name=?,product_status=?,quantity=?,user_id=?,update_date=?,update_operator=? where product_id=?
Hibernate: select o1_0.order_id,o1_0.buyer_id,o1_0.delete_yn,o1_0.insert_date,o1_0.insert_operator,oh1_0.order_id,oh1_0.order_history_id,oh1_0.delete_yn,oh1_0.insert_date,oh1_0.insert_operator,oh1_0.order_status,oh1_0.update_date,oh1_0.update_operator,o1_0.order_status,o1_0.product_id,pss1_0.order_id,pss1_0.price,pss1_0.product_id,pss1_0.product_name,o1_0.seller_id,o1_0.update_date,o1_0.update_operator from orders o1_0 left join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id left join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id where o1_0.order_id=?
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: update orders set buyer_id=?,delete_yn=?,insert_operator=?,order_status=?,product_id=?,seller_id=?,update_date=?,update_operator=? where order_id=?
Hibernate: select p1_0.quantity,count(opss1_0.order_id) from orders_product_snapshot opss1_0 join orders o1_0 on o1_0.order_id=opss1_0.order_id join product p1_0 on p1_0.product_id=opss1_0.product_id where p1_0.product_id=? and (o1_0.order_status=? or o1_0.order_status=?) group by p1_0.product_id,opss1_0.order_id
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: update product set delete_yn=?,insert_operator=?,price=?,product_name=?,product_status=?,quantity=?,user_id=?,update_date=?,update_operator=? where product_id=?
Hibernate: select p1_0.quantity,count(opss1_0.order_id) from orders_product_snapshot opss1_0 join orders o1_0 on o1_0.order_id=opss1_0.order_id join product p1_0 on p1_0.product_id=opss1_0.product_id where p1_0.product_id=? and (o1_0.order_status=? or o1_0.order_status=?) group by p1_0.product_id,opss1_0.order_id
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select o1_0.order_id,o1_0.buyer_id,o1_0.delete_yn,o1_0.insert_date,o1_0.insert_operator,oh1_0.order_id,oh1_0.order_history_id,oh1_0.delete_yn,oh1_0.insert_date,oh1_0.insert_operator,oh1_0.order_status,oh1_0.update_date,oh1_0.update_operator,o1_0.order_status,o1_0.product_id,pss1_0.order_id,pss1_0.price,pss1_0.product_id,pss1_0.product_name,o1_0.seller_id,o1_0.update_date,o1_0.update_operator from orders o1_0 left join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id left join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id where o1_0.order_id=?
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: update orders set buyer_id=?,delete_yn=?,insert_operator=?,order_status=?,product_id=?,seller_id=?,update_date=?,update_operator=? where order_id=?
Hibernate: select o1_0.order_id,pss1_0.product_id,b1_0.email,s1_0.email,oh1_0.order_status,pss1_0.price,pss1_0.product_name,oh1_0.insert_date from orders o1_0 join orders_history oh1_0 on o1_0.order_id=oh1_0.order_id join orders_product_snapshot pss1_0 on o1_0.order_id=pss1_0.order_id join users s1_0 on s1_0.user_id=o1_0.seller_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where o1_0.order_id=? and (s1_0.email=? or b1_0.email=?) order by oh1_0.order_history_id
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into users (delete_yn,email,insert_date,insert_operator,membership,password_hash,phone_number,update_date,update_operator,user_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into product (delete_yn,insert_date,insert_operator,price,product_name,product_status,quantity,user_id,update_date,update_operator,product_id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders (buyer_id,delete_yn,insert_date,insert_operator,order_status,product_id,seller_id,update_date,update_operator,order_id) values (?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into orders_history (delete_yn,insert_date,insert_operator,order_id,order_status,update_date,update_operator,order_history_id) values (?,?,?,?,?,?,?,default)
Hibernate: insert into orders_product_snapshot (price,product_id,product_name,order_id) values (?,?,?,default)
Hibernate: select opss1_0.order_id from orders_product_snapshot opss1_0 join orders o1_0 on o1_0.order_id=opss1_0.order_id join users b1_0 on b1_0.user_id=o1_0.buyer_id where opss1_0.product_id=? and b1_0.email=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
