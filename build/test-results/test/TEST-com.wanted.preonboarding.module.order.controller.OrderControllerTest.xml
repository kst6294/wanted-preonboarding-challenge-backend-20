<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.wanted.preonboarding.module.order.controller.OrderControllerTest" tests="11" skipped="0" failures="0" errors="0" timestamp="2024-05-30T00:37:58" hostname="lyusang-won-ui-MacBookPro.local" time="0.902">
  <properties/>
  <testcase name="주문 수정 - COMPLETED" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.109"/>
  <testcase name="주문 상세 조회 - 성공" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.068"/>
  <testcase name="유효하지 않은 주문 - 이미 구매한 제품" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.078"/>
  <testcase name="유효하지 않은 주문 - 이미 예약 중 또는 판매 완료된 제품" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.072"/>
  <testcase name="주문 실패 - 비회원" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.044"/>
  <testcase name="주문 수정 - SETTLEMENT" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.07"/>
  <testcase name="주문 수정 - ORDERED 에서 SETTLEMENT 로 잘못된 요청" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.071"/>
  <testcase name="유효하지 않은 주문 - 상품 없음" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.031"/>
  <testcase name="주문 수정 - COMPLETED 에서 COMPLETED 로 잘못된 요청" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.07"/>
  <testcase name="주문 생성" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.071"/>
  <testcase name="거래내역 조회 - 성공" classname="com.wanted.preonboarding.module.order.controller.OrderControllerTest" time="0.217"/>
  <system-out><![CDATA[2024-05-30T09:37:58.033+09:00  INFO 8150 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.wanted.preonboarding.module.order.controller.OrderControllerTest]: OrderControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-05-30T09:37:58.048+09:00  INFO 8150 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.wanted.preonboarding.PreonboardingApplication for test class com.wanted.preonboarding.module.order.controller.OrderControllerTest
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.0)

2024-05-30T09:37:58.060+09:00  INFO 8150 --- [    Test worker] c.w.p.m.o.c.OrderControllerTest          : Starting OrderControllerTest using Java 21.0.3 with PID 8150 (started by sangwon-ryu in /Users/sangwon-ryu/wanted-preonboarding-challenge-backend-20)
2024-05-30T09:37:58.061+09:00 DEBUG 8150 --- [    Test worker] c.w.p.m.o.c.OrderControllerTest          : Running with Spring Boot v3.3.0, Spring v6.1.8
2024-05-30T09:37:58.061+09:00  INFO 8150 --- [    Test worker] c.w.p.m.o.c.OrderControllerTest          : No active profile set, falling back to 1 default profile: "default"
2024-05-30T09:37:58.169+09:00  WARN 8150 --- [    Test worker] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: fc03b2ca-950d-4835-bc6d-5f7060473ba2

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2024-05-30T09:37:58.169+09:00  INFO 8150 --- [    Test worker] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2024-05-30T09:37:58.206+09:00  INFO 8150 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6e10c0a6, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a2d1e48, org.springframework.security.web.context.SecurityContextHolderFilter@440f55ad, org.springframework.security.web.header.HeaderWriterFilter@75388ef2, org.springframework.web.filter.CorsFilter@6a6beec0, org.springframework.security.web.authentication.logout.LogoutFilter@43defae6, com.wanted.preonboarding.auth.filter.JwtAuthenticationFilter@38a0ccc4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6e2b663, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@371ce753, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50dd2e86, org.springframework.security.web.session.SessionManagementFilter@122b07f1, org.springframework.security.web.access.ExceptionTranslationFilter@1a4b0c9b, org.springframework.security.web.access.intercept.AuthorizationFilter@ea5e6f]
2024-05-30T09:37:58.231+09:00 DEBUG 8150 --- [    Test worker] c.w.p.auth.filter.CustomLoggingFilter    : Filter 'loggingFilterRegistration' configured for use
2024-05-30T09:37:58.231+09:00 DEBUG 8150 --- [    Test worker] c.w.p.auth.filter.CustomLoggingFilter    : Filter 'customLoggingFilter' configured for use
2024-05-30T09:37:58.231+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.231+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.231+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
2024-05-30T09:37:58.235+09:00  INFO 8150 --- [    Test worker] c.w.p.m.o.c.OrderControllerTest          : Started OrderControllerTest in 0.184 seconds (process running for 5.738)
2024-05-30T09:37:58.238+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.238+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.238+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJscmpFVnR2UXlIUXhAd2FudGVkLmNvbSIsInJvbGUiOiJOT1JNQUwiLCJpYXQiOjE3MTcwMjk0NzgsImV4cCI6MTcxNzAzMzA3OH0.WoVMSET3eGaEW7ti9mTQhibnsy3rRSWMM86buGrG74U", Content-Length:"46"]
             Body = {"orderId":75022423,"orderStatus":"COMPLETED"}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#updateOrder(UpdateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":77036422,"productId":4467,"buyer":"lrjEVtvQyHQx@wanted.com","seller":"zBkHR@wanted.com","orderStatus":"ORDERED"},"response":{"status":200,"message":"success"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.347+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.347+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.348+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/order/34026156
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ3T0xRanBZdVBqc3RSZkB3YW50ZWQuY29tIiwicm9sZSI6Ik5PUk1BTCIsImlhdCI6MTcxNzAyOTQ3OCwiZXhwIjoxNzE3MDMzMDc4fQ.U_kSD6LoIe7NgJsr-RN2STSPq-KhIrqX0ntoh6FOqds"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#getOrder(Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"data":[{"orderId":34026156,"productId":9773,"buyer":"wOLQjpYuPjstRf@wanted.com","seller":"zgrxxywqbk","orderStatus":"ORDERED","price":12678285,"productName":"zarftnbrax","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":34026156,"productId":9773,"buyer":"wOLQjpYuPjstRf@wanted.com","seller":"zgrxxywqbk","orderStatus":"COMPLETED","price":12678285,"productName":"zarftnbrax","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":34026156,"productId":9773,"buyer":"wOLQjpYuPjstRf@wanted.com","seller":"zgrxxywqbk","orderStatus":"SETTLEMENT","price":12678285,"productName":"zarftnbrax","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false}],"response":{"status":200,"message":"success"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.415+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.415+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.415+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJRUUZ6WnJiQUF4V0F3QHdhbnRlZC5jb20iLCJyb2xlIjoiTk9STUFMIiwiaWF0IjoxNzE3MDI5NDc4LCJleHAiOjE3MTcwMzMwNzh9.H6K4SOHd4prKvwQAgnPbGwzcssoRn8SZRRX1ktFafRo", Content-Length:"18"]
             Body = {"productId":1400}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#createOrder(CreateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"status":400,"message":"createOrder 구매 이력이 존재합니다. createOrder ","timestamp":"2024-05-30 09:37:58","error":"BeanPropertyBindingResult"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.493+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.493+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.493+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyU1V0QlJTVEB3YW50ZWQuY29tIiwicm9sZSI6Ik5PUk1BTCIsImlhdCI6MTcxNzAyOTQ3OCwiZXhwIjoxNzE3MDMzMDc4fQ.TwAjxCwxGjx1jyyYxWf0tvi3CEOcSV6CTS8r8aXFA1k", Content-Length:"18"]
             Body = {"productId":6184}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#createOrder(CreateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"status":400,"message":"createOrder 이미 예약중 또는 판매완료 된 상품 입니다. ","timestamp":"2024-05-30 09:37:58","error":"BeanPropertyBindingResult"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.565+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.565+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.565+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"18"]
             Body = {"productId":8110}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#createOrder(CreateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 401
    Error message = 로그인이 필요합니다.
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.608+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.608+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.609+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJGRXFYSWl3cnpAd2FudGVkLmNvbSIsInJvbGUiOiJOT1JNQUwiLCJpYXQiOjE3MTcwMjk0NzgsImV4cCI6MTcxNzAzMzA3OH0.OrchagJKGH--KczmlonAlbrgbz6rk4MI1eMAbfcPMeM", Content-Length:"46"]
             Body = {"orderId":8969176,"orderStatus":"SETTLEMENT"}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#updateOrder(UpdateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":71096291,"productId":7806,"buyer":"FEqXIiwrz@wanted.com","seller":"NYNu@wanted.com","orderStatus":"COMPLETED"},"response":{"status":200,"message":"success"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.679+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.679+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.679+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJNdURGWmNxcG1BaEB3YW50ZWQuY29tIiwicm9sZSI6Ik5PUk1BTCIsImlhdCI6MTcxNzAyOTQ3OCwiZXhwIjoxNzE3MDMzMDc4fQ.mRp9tDMqvs0J3mQGtPXG-3iIgWrH8iD11hJZaYn3ouQ", Content-Length:"47"]
             Body = {"orderId":39681869,"orderStatus":"SETTLEMENT"}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#updateOrder(UpdateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"status":400,"message":"updateOrder 해당 주문의 주문 상태 변경을 지원 하지 않습니다. 주문 번호 ::: 39681869 현재 주문 상태 ::: ORDERED 변경 불가 상태 ::: SETTLEMENT","timestamp":"2024-05-30 09:37:58","error":"BeanPropertyBindingResult"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.750+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.750+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.750+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJEZ2dlZ0B3YW50ZWQuY29tIiwicm9sZSI6Ik5PUk1BTCIsImlhdCI6MTcxNzAyOTQ3OCwiZXhwIjoxNzE3MDMzMDc4fQ.o5X-ZM8vFcWTEZ_xZW-QejESOwtrKNaOQPBsCbr3xew", Content-Length:"22"]
             Body = {"productId":73465430}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#createOrder(CreateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"status":400,"message":"createOrder 해당 상품을 찾을 수 없습니다. 상품 ID: 73465430 createOrder ","timestamp":"2024-05-30 09:37:58","error":"BeanPropertyBindingResult"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.780+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.780+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.781+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJYY0FAd2FudGVkLmNvbSIsInJvbGUiOiJOT1JNQUwiLCJpYXQiOjE3MTcwMjk0NzgsImV4cCI6MTcxNzAzMzA3OH0.mFk3C3YzilR2sa011ab--eYY4Lv1OS22sWgXEdo4_EM", Content-Length:"46"]
             Body = {"orderId":43991670,"orderStatus":"COMPLETED"}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#updateOrder(UpdateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"status":400,"message":"updateOrder 해당 주문의 주문 상태 변경을 지원 하지 않습니다. 주문 번호 ::: 43991670 현재 주문 상태 ::: COMPLETED 변경 불가 상태 ::: COMPLETED","timestamp":"2024-05-30 09:37:58","error":"BeanPropertyBindingResult"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.851+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.851+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.852+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/v1/order
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQZVhCQ3lnR0hWQUB3YW50ZWQuY29tIiwicm9sZSI6Ik5PUk1BTCIsImlhdCI6MTcxNzAyOTQ3OCwiZXhwIjoxNzE3MDMzMDc4fQ.Wzm86hQEFqYRuu1bDxv6TGFRDrTX_nDkDYoW3IFZASo", Content-Length:"18"]
             Body = {"productId":8252}
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#createOrder(CreateOrder)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":20949215,"productId":8252,"buyer":"PeXBCygGHVA@wanted.com","seller":"uTeqIWq@wanted.com","orderStatus":"ORDERED"},"response":{"status":200,"message":"success"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2024-05-30T09:37:58.922+09:00  INFO 8150 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2024-05-30T09:37:58.923+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2024-05-30T09:37:58.923+09:00  INFO 8150 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/orders
       Parameters = {size=[5]}
          Headers = [Content-Type:"application/json;charset=UTF-8", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJrZ0x3QHdhbnRlZC5jb20iLCJyb2xlIjoiTk9STUFMIiwiaWF0IjoxNzE3MDI5NDc4LCJleHAiOjE3MTcwMzMwNzh9._ZWFus8It1YH0Kp1GCXriefraN56arZg8Q4dFwc4ywk"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.wanted.preonboarding.module.order.controller.OrderController
           Method = com.wanted.preonboarding.module.order.controller.OrderController#getOrders(OrderFilter, Pageable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Content-Type:"application/json;charset=UTF-8", X-Content-Type-Options:"nosniff", X-XSS-Protection:"0", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"content":[{"orderId":69293394,"productId":7912,"buyer":"kgLw@wanted.com","seller":"jfjatgxdpy","orderStatus":"ORDERED","price":14082263,"productName":"fsiskatlyf","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":7178480,"productId":9021,"buyer":"kgLw@wanted.com","seller":"stjifcdqtb","orderStatus":"ORDERED","price":70905932,"productName":"aoxyxnoafv","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":33226219,"productId":4162,"buyer":"kgLw@wanted.com","seller":"kyiaqiitgk","orderStatus":"ORDERED","price":74273755,"productName":"clcvqkuivr","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":59655678,"productId":4147,"buyer":"kgLw@wanted.com","seller":"lxejvlapic","orderStatus":"ORDERED","price":24851518,"productName":"qwoihgsitd","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false},{"orderId":96740514,"productId":1334,"buyer":"kgLw@wanted.com","seller":"xwueswzfae","orderStatus":"ORDERED","price":56693758,"productName":"urmyoubplm","insertDate":"2013-10-13 18:30:26","isCurrentUserSeller":false}],"last":false,"first":true,"number":0,"sort":{"empty":true,"unsorted":true,"sorted":false},"size":5,"numberOfElements":5,"empty":false,"lastDomainId":75950763},"response":{"status":200,"message":"success"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
